# ---------------------------------------------------------------------
# Build
# ---------------------------------------------------------------------

# Run a series of jobs used to publish a build artifact for deployment.

name: Build

on:
  workflow_call:
  workflow_dispatch:

jobs:
  build:
    name: Build & Publish
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      # ---------------------------------------------------------------
      # Checkout
      # ---------------------------------------------------------------

      # Checkout the code so it is available locally on the GitHub
      # runner.

      - name: Checkout
        uses: actions/checkout@v4

      # ---------------------------------------------------------------
      # Setup Python
      # ---------------------------------------------------------------

      # Setup toolchain used for python projects.

      - name: Python Setup
        uses: ./.github/actions/python-setup
        with:
          python-version: "3.11"
          poetry-version: "1.8.2"

      # ---------------------------------------------------------------
      # Get Build Metadata
      # ---------------------------------------------------------------

      # Get values used to tag the build artifact.

      - name: Get Metadata
        id: meta
        shell: bash
        env:
          APP: app
          BUILD_VERSION: ""
        run: |
          export SHORT_SHA=$(git rev-parse --short "$GITHUB_SHA")
          BUILD_VERSION=${BUILD_VERSION:-$SHORT_SHA}
          echo "build_version=$BUILD_VERSION" >> "$GITHUB_OUTPUT"
          echo "build_tag=$APP:$BUILD_VERSION" >> "$GITHUB_OUTPUT"

      # ---------------------------------------------------------------
      # Build Image
      # ---------------------------------------------------------------

      # Create build artifact (Docker Image) using the build tag.

      # IMPORTANT: This action expects the project to contain a
      # Makefile with a build command (make build) that builds the
      # Docker image locally. This allows application developers
      # to perform custom build logic (such as passing build args)

      - name: Build
        id: build
        shell: bash
        env:
          BUILD_TAG: ${{ steps.meta.outputs.build_tag }}
        run: |
          make build

      # ---------------------------------------------------------------
      # AWS Login
      # ---------------------------------------------------------------

      # Login to AWS using GitHub OIDC

      - name: AWS Login
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_GITHUB_ROLE }}
          aws-region: us-west-2

      # ---------------------------------------------------------------
      # AWS ECR Login
      # ---------------------------------------------------------------

      # Login to AWS ECR so we can publish the build artifact to it.

      - name: AWS ECR Login
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v2

      # ---------------------------------------------------------------
      # Publish
      # ---------------------------------------------------------------

      # Publish the build artifact (Docker Image) to a shared
      # location (AWS ECR)

      - name: Publish
        id: publish-docker
        shell: bash
        env:
          BUILD_TAG: ${{ steps.meta.outputs.build_tag }}
          BUILD_VERSION: ${{ steps.meta.outputs.build_version }}
          IMAGE_REGISTRY: ${{ steps.ecr-login.outputs.registry }}
          IMAGE_REPOSITORY: app
        run: |
          docker tag $BUILD_TAG $IMAGE_REGISTRY/$IMAGE_REPOSITORY:$BUILD_VERSION
          docker push $IMAGE_REGISTRY/$IMAGE_REPOSITORY:$BUILD_VERSION
